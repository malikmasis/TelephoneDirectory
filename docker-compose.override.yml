version: "3.8"
services: 
    authdb:
        container_name: authdb
        restart: always
        ports: 
            - "1453:1433"
        volumes:
            - authdb_volume:/var/opt/mssql
        environment: 
            - ACCEPT_EULA=Y
            - SA_PASSWORD=Admin!23
    guidedb: 
        container_name: guidedb
        restart: always
        ports: 
            - "5432:5432"
        environment: 
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=PhoneGuide
    reportdb: 
        container_name: reportdb
        restart: always
        ports: 
            - "5433:5432"
        environment: 
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=PhoneReport   
    rabbitmq: 
        container_name: rabbitmq
        restart: always
        ports: 
            - "5672:5672"
            - "15672:15672"
    rabbitmqmass: 
        container_name: rabbitmqmass
        restart: always
        ports: 
            - "5673:5672"
            - "15673:15672"
    guide-api:
        container_name: guide-api
        environment: 
            - ASPNETCORE_ENVIRONMENT=Development
            - Rabbitmq:Url=rabbitmq
            - "ConnectionStrings:DefaultConnection=Server=guidedb;Port=5432;Database=PhoneGuide;User Id=postgres;Password=admin;"
        ports:
            - "44337:80"
        depends_on: 
            - guidedb
            # - placement
        # networks:
        # - hello-dapr
    guide-dapr:
      image: "daprio/daprd:edge"
      command:   ["./daprd",
        "-app-id", "guide-api",
        "-dapr-http-port", "7002",
        # "-placement-host-address", "placement:50006",
        "-components-path", "/components"]
      volumes:
        - "./components/:/components"
      depends_on:
        - guide-api
      network_mode: "service:guide-api"
    report-api:
        container_name: report-api
        environment: 
            - ASPNETCORE_ENVIRONMENT=Development
            - Rabbitmq:Url=rabbitmqmass
            # - ASPNETCORE_URLS=https://*:44373;http://*:44372
            # - ASPNETCORE_Kestrel__Certificates__Default__Password=password
            # - ASPNETCORE_Kestrel__Certificates__Default__Path=certs/PhoneCertificate.pfx
            - "ConnectionStrings:DefaultConnection=Server=reportdb;Port=5432;Database=PhoneReport;User Id=postgres;Password=admin;"
        ports:
            # - "44373:443"
            - "44373:80"
        depends_on: 
            - reportdb
    auth-api:
        container_name: auth-api
        environment: 
            - ASPNETCORE_ENVIRONMENT=Development
            - "ConnectionStrings:DefaultConnection=Data Source=authdb;Initial Catalog=PhoneAuth;Persist Security Info=True;User ID=sa;Password=Admin!23"
        ports:
            - "44001:80"
        depends_on: 
            - authdb
    gateway-api:
        container_name: gateway-api
        environment: 
            - ASPNETCORE_ENVIRONMENT=Production
        ports:
            - "44382:80"
    pgAdmin4:
        container_name: pgAdmin4
        restart: always
        environment: 
            - PGADMIN_DEFAULT_EMAIL=malik.masis@gmail.com
            - PGADMIN_DEFAULT_PASSWORD=admin
        ports:
            - "5050:80"
    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
        ports:
            - 9200:9200
        volumes: 
            - elasticsearch-data:/usr/share/elasticsearch/data
        environment: 
            - xpack.monitoring.enabled=true
            - xpack.watcher.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - discovery.type=single-node
        networks:
            - elastic
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.7.0
        ports:
            - 5601:5601
        depends_on: 
            - elasticsearch
        environment: 
            - ELASTICSEARCH_URL=http://localhost:9200
        networks:
            - elastic 
    examplego-api:
        container_name: examplego-api
        ports:
            - "9000:80"
    goapp:
      build: src/Microservices/Golang/Example/sub
      depends_on:
        - redis
        - placement
      # networks:
      #   - hello-dapr
    goapp-dapr:
      image: "daprio/daprd:edge"
      command:   ["./daprd",
        "-app-id", "goapp",
        "-app-port", "8023",
        "-dapr-http-port", "3500",
        "-placement-host-address", "placement:50006",
        "-components-path", "/components"]
      volumes:
        - "./components/:/components"
      depends_on:
        - goapp
      network_mode: "service:goapp"
    placement:
      image: "daprio/dapr"
      command: ["./placement", "-port", "50006"]
      ports:
        - "50006:50006"
      # networks:
      #   - hello-dapr
    redis:
      image: "redis:alpine"
      ports:
        - "6379:6379"
      # networks:
      #   - hello-dapr
    otel-collector:
        image: otel/opentelemetry-collector:latest
        command: ["--config=/etc/otel-collector-config.yaml"]
        volumes:
        - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
        - ./output:/etc/output:rw # Store the logs
        ports:
        - "4317:4317"
        - "8888:8888"   # Prometheus metrics exposed by the collector
        - "8889:8889"   # Prometheus exporter metrics
        depends_on:
        - jaeger
    jaeger:
        container_name: jaeger
        image: jaegertracing/all-in-one
        ports:
        - "16686:16686"
        - "14250"

    prometheus:
        container_name: prometheus
        image: prom/prometheus:latest
        ports:
        - "9090:9090"
networks:
    elastic:
        driver: bridge
    # hello-dapr:
    
volumes: 
    elasticsearch-data: